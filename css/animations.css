/* Court Coder - Animations CSS File */

/* ========== ANIMATION CLASSES ========== */

/* Fade In */
.fade-in {
    animation: fadeIn 0.5s ease-in-out forwards;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

/* Fade Out */
.fade-out {
    animation: fadeOut 0.5s ease-in-out forwards;
}

@keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
}

/* Slide In From Top */
.slide-in-top {
    animation: slideInTop 0.5s ease-in-out forwards;
}

@keyframes slideInTop {
    from { 
        transform: translateY(-50px);
        opacity: 0;
    }
    to { 
        transform: translateY(0);
        opacity: 1;
    }
}

/* Slide In From Bottom */
.slide-in-bottom {
    animation: slideInBottom 0.5s ease-in-out forwards;
}

@keyframes slideInBottom {
    from { 
        transform: translateY(50px);
        opacity: 0;
    }
    to { 
        transform: translateY(0);
        opacity: 1;
    }
}

/* Scale In */
.scale-in {
    animation: scaleIn 0.3s ease-in-out forwards;
}

@keyframes scaleIn {
    from { 
        transform: scale(0.8);
        opacity: 0;
    }
    to { 
        transform: scale(1);
        opacity: 1;
    }
}

/* Bounce */
.bounce {
    animation: bounce 0.5s ease-in-out;
}

@keyframes bounce {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-10px);
    }
}

/* Pulse */
.pulse {
    animation: pulse 1.5s infinite;
}

@keyframes pulse {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.1);
    }
    100% {
        transform: scale(1);
    }
}

/* Rotate */
.rotate {
    animation: rotate 1s linear infinite;
}

@keyframes rotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

/* Shake */
.shake {
    animation: shake 0.5s cubic-bezier(.36,.07,.19,.97) both;
}

@keyframes shake {
    10%, 90% {
        transform: translate3d(-1px, 0, 0);
    }
    20%, 80% {
        transform: translate3d(2px, 0, 0);
    }
    30%, 50%, 70% {
        transform: translate3d(-4px, 0, 0);
    }
    40%, 60% {
        transform: translate3d(4px, 0, 0);
    }
}

/* ========== PLAYER MOVEMENT ANIMATIONS ========== */

/* Player positioning transition */
.player-marker-onboard {
    transition: transform 0.3s ease-out, left 0.3s ease-out, top 0.3s ease-out;
}

/* Player running animation */
.player-running {
    animation: playerRunning 0.5s linear infinite;
}

@keyframes playerRunning {
    0%, 100% {
        transform: scale(1);
    }
    50% {
        transform: scale(0.95) translateY(2px);
    }
}

/* Player screening animation */
.player-screening {
    animation: playerScreening 1s ease-in-out;
}

@keyframes playerScreening {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.1);
    }
    100% {
        transform: scale(1);
    }
}

/* Player cutting animation */
.player-cutting {
    animation: playerCutting 0.4s ease-in-out;
}

@keyframes playerCutting {
    0% {
        transform: rotate(0deg);
    }
    30% {
        transform: rotate(-10deg);
    }
    60% {
        transform: rotate(10deg);
    }
    100% {
        transform: rotate(0deg);
    }
}

/* ========== BALL MOVEMENT ANIMATIONS ========== */

/* Ball bounce animation */
.ball-bounce {
    animation: ballBounce 0.5s ease-in-out infinite;
}

@keyframes ballBounce {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-10px);
    }
}

/* Ball passing animation */
.ball-pass {
    animation: ballPass 0.5s ease-out forwards;
}

@keyframes ballPass {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(0.8);
    }
    100% {
        transform: scale(1);
    }
}

/* Ball shooting animation */
.ball-shot {
    animation: ballShot 1s ease-out forwards;
}

@keyframes ballShot {
    0% {
        transform: scale(1) translateY(0);
    }
    25% {
        transform: scale(0.9) translateY(-5px);
    }
    50% {
        transform: scale(0.8) translateY(-15px);
    }
    75% {
        transform: scale(0.7) translateY(-5px);
    }
    100% {
        transform: scale(0.6) translateY(0);
    }
}

/* Ball spinning animation */
.ball-spin {
    animation: ballSpin 0.5s linear infinite;
}

@keyframes ballSpin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

/* ========== UI FEEDBACK ANIMATIONS ========== */

/* Button press animation */
.btn-press {
    animation: btnPress 0.2s ease-in-out;
}

@keyframes btnPress {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(0.95);
    }
    100% {
        transform: scale(1);
    }
}

/* Success feedback animation */
.success-feedback {
    animation: successFeedback 1s ease-in-out;
}

@keyframes successFeedback {
    0% {
        box-shadow: 0 0 0 0 rgba(40, 167, 69, 0.7);
    }
    70% {
        box-shadow: 0 0 0 10px rgba(40, 167, 69, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(40, 167, 69, 0);
    }
}

/* Error feedback animation */
.error-feedback {
    animation: errorFeedback 1s ease-in-out;
}

@keyframes errorFeedback {
    0% {
        box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.7);
    }
    70% {
        box-shadow: 0 0 0 10px rgba(220, 53, 69, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(220, 53, 69, 0);
    }
}

/* Highlight animation */
.highlight-element {
    animation: highlightElement 2s ease-in-out infinite;
}

@keyframes highlightElement {
    0%, 100% {
        box-shadow: 0 0 0 0 rgba(62, 100, 255, 0);
    }
    50% {
        box-shadow: 0 0 0 4px rgba(62, 100, 255, 0.3);
    }
}

/* Loading spinner animation */
.loading-spinner {
    width: 40px;
    height: 40px;
    border: 4px solid rgba(62, 100, 255, 0.2);
    border-radius: 50%;
    border-top-color: var(--primary-color);
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

/* Progress bar animation */
.progress-bar {
    height: 4px;
    background-color: var(--primary-color);
    width: 0%;
    transition: width 0.3s ease-in-out;
}

.progress-bar.animate {
    animation: progressGrow 2s ease-in-out forwards;
}

@keyframes progressGrow {
    from { width: 0%; }
    to { width: 100%; }
}

/* ========== TRANSITION UTILITIES ========== */

/* Generic transitions */
.transition-opacity {
    transition: opacity 0.3s ease-in-out;
}

.transition-transform {
    transition: transform 0.3s ease-in-out;
}

.transition-all {
    transition: all 0.3s ease-in-out;
}

/* Hover effects */
.hover-scale:hover {
    transform: scale(1.05);
}

.hover-brightness:hover {
    filter: brightness(1.1);
}

.hover-shadow:hover {
    box-shadow: var(--shadow-md);
}

/* Focus effects */
.focus-outline:focus {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
}

/* ========== ANIMATION DELAYS ========== */

.delay-100 { animation-delay: 0.1s; }
.delay-200 { animation-delay: 0.2s; }
.delay-300 { animation-delay: 0.3s; }
.delay-400 { animation-delay: 0.4s; }
.delay-500 { animation-delay: 0.5s; }
.delay-750 { animation-delay: 0.75s; }
.delay-1000 { animation-delay: 1s; }

/* ========== ANIMATION DURATIONS ========== */

.duration-fast { animation-duration: 0.3s; }
.duration-normal { animation-duration: 0.5s; }
.duration-slow { animation-duration: 0.8s; }
.duration-very-slow { animation-duration: 1.2s; }

/* ========== ANIMATION CONTROL ========== */

.animation-paused {
    animation-play-state: paused;
}

.animation-running {
    animation-play-state: running;
}

.animation-infinite {
    animation-iteration-count: infinite;
}

.animation-once {
    animation-iteration-count: 1;
}

.animation-twice {
    animation-iteration-count: 2;
}

/* ========== RESPONSIVE ANIMATIONS ========== */

@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}